# edgeApp

**A cutting-edge application built with [Python, Streamlit, Mosquitto MQTT]**

Welcome to our **EdgeApp Project**!  
This repository contains the complete codebase of our Edge Computing App – **edgeApp** – designed to simulate, process, and visualize real-time sensor data.

EdgeApp leverages modern technologies such as Python, Docker, MQTT, and Streamlit to deliver a scalable and extensible solution for edge data processing. The app is containerized for easy deployment and built with performance and modularity in mind.

In this project, we’ve applied edge computing principles to simulate sensor data, process it at the edge using Python services, and visualize the results in real-time through an intuitive Streamlit dashboard.

---

## 🧠 Why Edge Computing?

Edge computing processes data closer to the source, reducing latency and bandwidth usage. This project helps simulate and understand edge app architecture.

---

## 🧩 Architecture Diagram

![Architecture](screans/archi.jpg)

---

## 📦 Components Description

- **Sensor Generator**: Publishes real-time data to the MQTT broker.  
- **Mosquitto**: MQTT broker used for message transport.  
- **Edge Processor**: Subscribes to topics, processes incoming data using ML model.  
- **Streamlit Dashboard**: Visualizes the data with charts and CSV download feature.

---

## 🧰 Technologies

- Python  
- Docker & Docker Compose  
- MQTT (Mosquitto)  
- Streamlit  
- Ansible (for automation and provisioning)  
- Machine Learning  

---

## 📁 Project Structure

